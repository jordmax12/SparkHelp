@using PagedList.Mvc;
@using PagedList;
@model IList<SparkHelp.ViewModels.ResultsViewModel>
@{
    ViewBag.Title = "Home Page";

}
<link rel="stylesheet" type="text/css" href="Content/font-awesome.min.css"/>
<link rel="stylesheet" type="text/css" href="Content/bootstrap.min.css" />
<link rel="stylesheet" type="text/css" href="Content/Site.css" />
<div class="container">

    <div class="text-center">
        <h1>Spark Help</h1>
    </div>
    <br/>
    <br/>
    <!-- Search Navbar - START -->

    <div class="col-md-4 col-md-offset-4">
        <form class="navbar-form" role="search">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search" name="q">
                <div class="input-group-btn">
                    <a href="@Url.Action("Index", "Home", new {queried = "true"})"><button class="btn btn-default"><i class="glyphicon glyphicon-search"></i></button></a>
                </div>
            </div>
        </form>
    </div>
    <br/>
    <br/>

    <div class="col-md-12">
        <h2 style="margin-left: auto; margin-right: auto; clear: both;">Stack Overflow</h2>
        <br />
        <ul class="list-results">
            @{
                int page = 0;
                int index = 0;
            }
            @foreach (var item in Model)
            {
                if (index < 8)
                {
                    string link = "http://www.stackoverflow.com" + @item.question.QuestionLink;

                    <li>
                        <a href="@link" style="width: auto; height: 72px;">
                            <h4>@Html.DisplayFor(modelItem => item.question.QuestionTitle)</h4>
                        </a>
                    </li>
                    index++;
                }

            }

        </ul>
    </div>
    <div class="col-md-12">
        <br />
        <h2 style="margin-left: auto; margin-right: auto; clear: both;">MSDN</h2>
        <br/>
        <ul class="list-results">

            @{
                string prevString = "";
                page = 0;
                index = 0;
            }
            @foreach (var item in Model)
            {
                if (item.msdn.QueryTitle != prevString && index < 8)
                {

                    <li>
                        <a href="@item.msdn.QueryURL" stZyle="width: auto; height: 72px;">
                            <h4>@Html.DisplayFor(modelItem => item.msdn.QueryTitle)</h4>
                        </a>
                    </li>
                    index++;
                }

                prevString = item.msdn.QueryTitle;
            }
        </ul>
    </div>

    <!-- Search Navbar - END -->

</div>